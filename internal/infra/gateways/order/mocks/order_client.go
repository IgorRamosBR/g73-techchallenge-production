// Code generated by MockGen. DO NOT EDIT.
// Source: order_client.go
//
// Generated by this command:
//
//	mockgen -source=order_client.go -destination=mocks/order_client.go
//
// Package mock_order is a generated GoMock package.
package mock_order

import (
	reflect "reflect"

	models "github.com/IgorRamosBR/g73-techchallenge-production/internal/core/models"
	gomock "go.uber.org/mock/gomock"
)

// MockOrderClient is a mock of OrderClient interface.
type MockOrderClient struct {
	ctrl     *gomock.Controller
	recorder *MockOrderClientMockRecorder
}

// MockOrderClientMockRecorder is the mock recorder for MockOrderClient.
type MockOrderClientMockRecorder struct {
	mock *MockOrderClient
}

// NewMockOrderClient creates a new mock instance.
func NewMockOrderClient(ctrl *gomock.Controller) *MockOrderClient {
	mock := &MockOrderClient{ctrl: ctrl}
	mock.recorder = &MockOrderClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderClient) EXPECT() *MockOrderClientMockRecorder {
	return m.recorder
}

// GetOrders mocks base method.
func (m *MockOrderClient) GetOrders() (models.ProductionOrderPage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrders")
	ret0, _ := ret[0].(models.ProductionOrderPage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrders indicates an expected call of GetOrders.
func (mr *MockOrderClientMockRecorder) GetOrders() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrders", reflect.TypeOf((*MockOrderClient)(nil).GetOrders))
}

// UpdateOrderStatus mocks base method.
func (m *MockOrderClient) UpdateOrderStatus(orderId, status string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrderStatus", orderId, status)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOrderStatus indicates an expected call of UpdateOrderStatus.
func (mr *MockOrderClientMockRecorder) UpdateOrderStatus(orderId, status any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrderStatus", reflect.TypeOf((*MockOrderClient)(nil).UpdateOrderStatus), orderId, status)
}
